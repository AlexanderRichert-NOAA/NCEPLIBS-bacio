Instructions for building and installing bacio on Unix
******************************************************

$Revision$
nceplibs support email: ncep.list.emc.nceplibs.support@noaa.gov


The easy (I hope) way...
------------------------

To build the single (_4) and double (_8) precision bacio libraries, you can
use the "make_bacio_lib.sh" script specifying the build configuration. The
available build configurations are:
  gfortran        ifort        pgf95        xlf2003

So, on WCOSS/tide you would type:

  $ make_bacio_lib.sh ifort


On the CCS you would type

  $ make_bacio_lib.sh xlf2003


This script iterates over the single (_4) and double (_8) precision build
configurations setting the appropriate default real and integer precision
promotion compiler switches.

Some additional points:
- Both GNU-type and NCO-type installs are performed.
- The libraries are installed relative to the current directory.

You can tailor the build process using this "make_bacio_lib.sh" script by
modifying the relevant build configuration setup file in the "config-setup/"
subdirectory.



The more flexible way
---------------------

1. Configuration
................

If you need more flexibility in the library build you can specify the necessary 
information directly to the configure script that generates the makefiles. For
example, on WCOSS/tide:

  $ ./configure --prefix=${PWD} \
                --enable-promote=4|8 \
                --disable-big-endian-test \
                FC="ifort" \
                FCFLAGS="-O3 -g -traceback" \
                CC="icc" \
                CFLAGS="-O3 -DUNDERSCORE"

The --prefix switch sets the installation directory and defaults to /usr/local so
make sure you set it to a directory in which you have write access.

The --enable-promote switch allows you to specify the type of precision build be it
single (4) or double (8) precision. To build the double precision library you would
use:

  --enable-promote=8

Not specifying this switch is equivalent to "--enable-promote=4".

The --disable-big-endian-test switch builds the test programs for little-endian I/O.
the default is big-endian I/O. Note that this switch does not affect the library
build at all - just the test program.

The definition of the "FC" and "CC" enviroment variables are not strictly necessary
as they default to "ifort/icc" on linux systems if available (followed by "gfortran/gcc"
and "pgf95/pgcc" if not), and "xlf2003/xlc" on AIX systems.

NOTE: On many systems the Gnu C compiler, gcc, is usually detected before other compilers
      so one should example the configure output to ensure the correct C compiler was
      found. Alternatively, just specify the compiler on the command line.



2. Building the library
.......................

To start the library build for a particular configuration, simply type

  $ make



3. Testing the build
....................

To run the accompanying tests using the just built library, simply type

  $ make check

This will build and run the tests, as well as report on how many passed/failed.



4. Installing the library
.........................

To install the library in a directory conforming to the NCO organisation and
naming conventions, type:

  $ make nco_install

To perform a GNU-type install, type:

  $ make install



5. Cleaning up
..............

Two targets are provided for cleaning up after the build. To remove all the 
build products type

  $ make clean

To also remove all the configuration products (i.e. the makefiles) type

  $ make distclean
